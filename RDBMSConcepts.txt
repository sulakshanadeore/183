 		RDBMS

  Codd's rules
12 rules
    6 rules==== Half RDBMS
    >6 rules------ Full RDBMS

Data 2 types
	User kept data---- Actual data
	metadata/data about data---- empid--number
				     ename--string
				     joining date---date

        

Dr.Edgar F Codd

	1) Information rule--- Everything in the database must be stored in table format.
	User kept data---- Actual data
	metadata/data about data---- empid--number
				     ename--string
				     joining date---date

	
 	2) Guaranteed Access Rule
		Every single data saved must be accessible logically with a table-name(relation),
		the data must be stored under a column(attribute)
		the data must be stored in  a row(row value/tuple)
and every row/tuple must be identified by  a primary key.

	3) Systematic treatment of null values
		 the null treated specially different from  other values like space,0.
		 this uniform treatment of null values is important --- 
		a)data is missing
		b) data is not known
		c) is not applicable

Case a) 
example: commission only applicable for salesman.
	but all employees are having salaries greater than 0.
job-  SALESMAN----- comm will be applicable >=0
job---NOT SALESMAN(MGR,CLERK,OE)etc------- Comm----- will be "null"
	IS NOT APPLICABLE

Case b) Bank Account---- Data is not known

	Account Opening Form------ All details
	Account No:(Only for office use)


 Case c) Joining Details ----Company----- data is missing
	Passport No:
     saved in the db of the company
         
	
--------------------------------------------------------------------

	4) Active Online Catalog/Data Dictionary
system_tables

        user_tables
--------------------------special table---- in the db & by the db------automatically updated
 Employee---- Info(data about data)
	Empid---- pk  --number
	Deptno---fk---- number
	ename------length of ename >0 and <50---string
        sal > 0-----number
	comm  null---- number
        JoiningDate------- not null----date
	Marital Status-----not null----bool
	Dependents---- number

Location/Address----add
Dependents: remove

	5) Comprehensive Data Sub-Language Rule-----

 	SQL------- Structured Query Language---- 
		SQL--- ANSI syntax----- (std language) ---- R/I/U/D operations
		Product Specific Syntax---- 
			
			cube
			rollup
			
          language --- database language--- common to all databases
	summary of the data/
	insert/
	update/
	delete


*******	6) View Updating rule/View Update Rule-------- Partially supported rule by all the databases

		view is a object like a table--- 
	table stores the data physically in it
	view references the table for the data---- virtual table
	created for security purpose so that the whole data is not exposed to the end user  directly
1)Simple view-----
	updates itself with a simple sql query--- updates successfully------ table.
2)Complex view----join,subquery,aggregate, etc...
	Non Updateable views
	(Logically)---- 
it works on multiple rows of the data-- and one row only can be updated at a time 
is the rule of updation  --- all rows not updated and  so the table 
doesnot updated , so view is also not updated.
because view fetches the data from the table.

        7) High Level Insert/Update/Delete Rule

	Must support High Insert, Update, Delete. It must also support union,intersection and minus
operations.
	SetA		SetB
	a		a
	b		b
	c		
Union----- a,b,c
intersection---- a,b
minus--------c

Datatypes---- columns sequnece in the query must match
	TableA---- Employee 
	n	S    n
	Empid Ename Sal
	1	A	10K
	2	B	20K	
	3	C	30K


	TableB----- Customer
	n	    n         s	
	CustID    Points       Custname 
	1		10K	A
	2		20K	B
	3		30K	C
	4		20K  	J


union------1,2,3,4

	1	A	10K
	2	B	20K	
	3	C	30K
	1		10K	A
	2		20K	B
	3		30K	C
	4		20K  	J

union all--------
	1	A	10K
	2	B	20K	
	3	C	30K
	4		20K  	J



intersect--- 1,2,3
	1	A	10K
	2	B	20K	
	3	C	30K
minus
	4		20K  	J


	8) Physical Data Independence

DB
Table -Employee
	n	S    n
	Empid 	Deptno	City Adhar		Ename Sal			
	1					A	10K
	2			  		B	20K	
	3					C	30K
	
HRApp---- 

The application must not be affected even if u make physical changes to your table


	9) Logical Data Independence--- merging data/split data

		Physical View
DB
Table -Employee
	n	S    n
	Empid 	Deptno	City Adhar		Ename Sal			
	1					A	10K
	2			  		B	20K	
	3	
10 rows

Table --- Emp 

	
	
		Logical View
HRApp---- must work efficiently ------


	10) Integrity Rule
		Integrity--- 
1) Entity Integrity------ Table/Relation-------PK
2) Referential Integrity------Table----- it must be (pk) FK


		1) Wholeness----- complete
		2) Correctness of data------ true data


Referencing ----FK 				Dept----PK
	in emp table----deptno   ||||| ---ref--dept-----deptno
		Student
		Rno Name Marks
		1   A	11
		2   B	12
		3   A	

	Emp -
        PK
	(Composite PK--- Empno+Ename)
	Empno ename sal  deptno	Loc		PanID
	1	A    10k  10	Chennai		AJMPD34234
        2       A    15k  10	Chennai         AJMYY32342

	3       C    10k  null(data is unknown)

	Dept
	Deptno Dname Loc
	10	A     A1
 	20	B	B1
	30 	C	C1
	40 	D	null
	
PK--- Primary key----- unique and it cannot be null

FK----Foreign key-------can have repeating values and it can be NULL


	11) Distribution Independence
		Distributed Databases
	UKDB
	USDB
	IndiaDB

	Employees
	Empno Ename Sal deptno mgr joiningDate


EmployeesUS
EmployeesUK
EmployeesIn

	show all the employees------ 
     distributed data

	12) Non-Subversion Rule
security mechanism --cannot -- bypass by any means
		





  Normalization
  
	Entity Integrity
	Referential Integrity
        Constraints